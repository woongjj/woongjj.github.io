import * as React from "react";
import { PropertyControls, ControlType } from "framer";

let borderRadius = "30px";

const style: React.CSSProperties = {
  color: "#fff",
  overflow: "hidden",
  fontFamily: "SF Pro Display",
  width: "100%",
  height: "100%",
  borderRadius: borderRadius,
  backgroundClip: "border-box",
  boxShadow: "0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)"
};

const titleStyle: React.CSSProperties = {
  position: "absolute",
  fontSize: "40px",
  fontWeight: "700",
  margin: "0",
  left: "20px",
  bottom: "50px"
};

const subtitleStyle: React.CSSProperties = {
  position: "absolute",
  fontSize: "18px",
  fontWeight: "400",
  color: "#f4f4f4",
  margin: "0",
  left: "20px",
  bottom: "20px"
};

const buttonStyle: React.CSSProperties = {
  position: "absolute",
  width: "70px",
  height: "70px",
  top: "50%",
  left: "50%",
  margin: "-35px 0 0 -35px",
  transition: "all 2s cubic-bezier(.55,0,.1,1)"
};

// Define type of property
interface Props {
  width: string;
  height: string;
  overlay: string;
  source: string;
  poster: string;
  controls: boolean;
  title: string;
  subtitle: string;
  autoplay: boolean;
  loop: boolean;
  muted: boolean;
}

export class Video extends React.Component<Props> {
  constructor(props) {
    super(props);
    this.videoClick = this.videoClick.bind(this);
  }

  // Set default properties
  static defaultProps = {
    width: 320,
    height: 400,
    overlay: null,
    source: null,
    poster: null,
    controls: true,
    title: "Video Card",
    subtitle: "Description below",
    autoplay: false,
    loop: true,
    muted: true
  };

  // Items shown in property panel
  static propertyControls: PropertyControls = {
    overlay: {
      type: ControlType.Color,
      title: "Overlay"
    },
    source: {
      type: ControlType.File,
      title: "Video",
      // HTML5 current suporting formats
      allowedFileTypes: ["mp4", "webm", "ogg"]
    },
    poster: {
      type: ControlType.Image,
      title: "Poster"
    },
    controls: { type: ControlType.Boolean, title: "Play Button" },
    title: { type: ControlType.String, title: "Title" },
    subtitle: { type: ControlType.String, title: "Subtitle" },
    autoplay: { type: ControlType.Boolean, title: "Autoplay" },
    loop: { type: ControlType.Boolean, title: "Loop" },
    muted: { type: ControlType.Boolean, title: "Muted" }
  };

  videoClick() {
    let video = document.getElementById("video");
    let overlay = document.getElementById("overlay");
    let button = document.getElementById("button");
    if (video.paused) {
      video.play();
    } else {
      video.pause();
    }
  }

  render() {
    return (
      <div style={style}>
        <div
          id="overlay"
          style={{
            position: "absolute",
            width: "100%",
            height: "100%",
            background: `${this.props.overlay}`,
            borderRadius: borderRadius,
            backfaceVisibility: "hidden"
          }}
          onClick={this.videoClick}
        />

        <svg
          id="button"
          width="75px"
          height="75px"
          viewBox="0 0 75 75"
          style={buttonStyle}
          onClick={this.videoClick}
          display={this.props.controls ? "block" : "none"}
        >
          <g
            id="button"
            stroke="none"
            strokeWidth="1"
            fill="none"
            fillRule="evenodd"
          >
            <g fill-rule="nonzero">
              <circle
                id="Oval"
                fillOpacity="0.5"
                fill="#000"
                cx="37.5"
                cy="37.5"
                r="37.5"
              />
              <path
                d="M41.2037849,27.1990409 L53.2785404,47.7708467 C53.5066844,48.1595364 53.3765364,48.6595788 52.9878467,48.8877227 C52.8625939,48.9612407 52.7199903,49 52.5747555,49 L28.4252445,49 C27.9745458,49 27.6091823,48.6346365 27.6091823,48.1839378 C27.6091823,48.038703 27.6479416,47.8960995 27.7214596,47.7708467 L39.7962151,27.1990409 C40.024359,26.8103513 40.5244015,26.6802032 40.9130911,26.9083472 C41.0332081,26.9788506 41.1332814,27.0789239 41.2037849,27.1990409 Z"
                id="Triangle"
                fill="#FFFFFF"
                transform="translate(40.500000, 37.500000) rotate(90.000000) translate(-40.500000, -37.500000) "
              />
            </g>
          </g>
        </svg>

        <video
          id="video"
          width="325px"
          height="400px"
          controls={false}
          autoPlay={this.props.autoplay}
          loop={this.props.loop}
          muted={this.props.muted}
          poster="transparent"
          style={{
            width: "100%",
            height: "100%",
            background: `url(' ${this.props.poster}')`,
            backgroundSize: "cover",
            borderRadius: borderRadius
          }}
        >
          <source src={this.props.source} type="video/mp4" />
          <source src={this.props.source} type="video/ogg" />
        </video>
        <p className="title" style={titleStyle}>
          {this.props.title}
        </p>
        <p className="subtitle" style={subtitleStyle}>
          {this.props.subtitle}
        </p>
      </div>
    );
  }
}
